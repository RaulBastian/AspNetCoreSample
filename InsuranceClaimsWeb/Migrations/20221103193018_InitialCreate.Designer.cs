// <auto-generated />
using System;
using AspNetCoreSample.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetCoreSample.Migrations
{
    [DbContext(typeof(AspNetSampleDbContext))]
    [Migration("20221103193018_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.Property<int>("RepairerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("RepairerId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyHolderId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PolicyHolderId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClaimId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.PolicyHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PolicyHolders");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Repairer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Repairers");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Appointment", b =>
                {
                    b.HasOne("AspNetCoreSample.Model.Entities.Claim", "Claim")
                        .WithMany("Appointments")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNetCoreSample.Model.Entities.Repairer", "Repairer")
                        .WithMany()
                        .HasForeignKey("RepairerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Repairer");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Claim", b =>
                {
                    b.HasOne("AspNetCoreSample.Model.Entities.PolicyHolder", "PolicyHolder")
                        .WithMany()
                        .HasForeignKey("PolicyHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyHolder");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Expense", b =>
                {
                    b.HasOne("AspNetCoreSample.Model.Entities.Claim", null)
                        .WithMany("Expenses")
                        .HasForeignKey("ClaimId");

                    b.HasOne("AspNetCoreSample.Model.Entities.Invoice", null)
                        .WithMany("Expenses")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Invoice", b =>
                {
                    b.HasOne("AspNetCoreSample.Model.Entities.Claim", null)
                        .WithMany("Invoices")
                        .HasForeignKey("ClaimId");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Claim", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Expenses");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("AspNetCoreSample.Model.Entities.Invoice", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
